<!DOCTYPE HTML>
<html lang="en">


<head>
    <meta charset="utf-8">
    <title>Audiogalore</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="../admin-assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="../admin-assets/css/main.css" rel="stylesheet" type="text/css" />
    <!-- Add Cropper.js CSS -->
<link rel="stylesheet" href="https://unpkg.com/cropperjs/dist/cropper.min.css">

<!-- Add jQuery (required by Cropper.js) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Add Cropper.js -->
<script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.js"></script>

</head>

<body>
    <%- include('../layouts/adminHeader.ejs') %>	

   
      
        <form action="/admin/addProduct" method="post" enctype="multipart/form-data" id="myForm">
        <section class="content-main">
        
            <div class="row">
                <div class="col-6">
                    <div class="content-header">
                        <h2 class="content-title">Add New Product</h2>
                       
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row">
                                <!-- <div class="col-md-3">
                                    <h6>1. General info</h6>
                                </div> -->
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <label class="form-label">Product title</label>
                                        <input type="text" placeholder="Type here" class="form-control" name="name" id="name" onkeyup="nameValidation()">
                                        <span id="nameError"></span>
                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label">Description</label>
                                        <textarea placeholder="Type here" class="form-control" rows="4" name="description" id="description" onkeyup="descriptionValidation()"></textarea>
                                        <span id="descriptionError"></span>
                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label">Category</label>
                                        
                                        <select class="form-select" name="category">
                                            <% category.forEach(function(category) { %>
                                            <option value="<%= category._id %>"><%= category.name %>
                                            </option>
                                            <% }); %>
                                        </select>
                                    </div>
                                </div> <!-- col.// -->
                            </div> <!-- row.// -->
                            <hr class="mb-4 mt-0">
                            <div class="row">
                                <!-- <div class="col-md-3">
                                    <h6>2. Pricing</h6>
                                </div> -->
                                <div class="col-md-9">
                                    <div class="mb-4">
                                        <label class="form-label">Cost in INR</label>
                                        <input type="number" placeholder="00.0" class="form-control" name="price" id="price" onkeyup="priceValidation()">
                                        <span id="priceError"></span>
                                    </div>
                                    <div class="mb-4">
                                      <label class="form-label">Stock</label>  
                                      <input type="number" placeholder="0" class="form-control" name="stock" id="stock" onkeyup="stockValidation()">
                                      <span id="stockError"></span>
                                  </div>
                                </div> <!-- col.// -->
                            </div> <!-- row.// -->
                            
                            <hr class="mb-4 mt-0">
                           

                            <div class="col-lg-6">
                                <div class="card mb-4">
                                  <div class="card-header">
                                    <h4>Media</h4>
                                  </div>
                                  <div class="input-upload">
                                    <img src="/imgs/theme/upload.svg" id="imgView1" alt="">
                                    <input class="form-control" id="input1" name="file" onchange="viewImage1(event),viewImage(event, 1)" type="file">
                                  </div>
                                  <div class="image-cropper" style="display:none;">
                                    <img src="" id="croppedImg1" alt="">
                                    <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                  </div>
                      
                                </div> <!-- card end// -->
                              </div>
                              <div class="col-lg-6">
                                <div class="card mb-4">
                                  <div class="card-header">
                                    <h4>Media</h4>
                                  </div>
                                  <div class="input-upload">
                                    <img src="/imgs/theme/upload.svg" id="imgView2" alt="">
                                    <input class="form-control" id="input2" name="file" onchange="viewImage2(event),viewImage(event, 2)" type="file">
                                  </div>
                                  <div class="image-cropper" style="display:none;">
                                    <img src="" id="croppedImg2" alt="">
                                    <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                  </div>
                      
                                </div> <!-- card end// -->
                              </div>
                              <div class="col-lg-6">
                                <div class="card mb-4">
                                  <div class="card-header">
                                    <h4>Media</h4>
                                  </div>
                                  <div class="input-upload">
                                    <img src="/imgs/theme/upload.svg" id="imgView3" alt="">
                                    <input class="form-control" id="input3" name="file" onchange="viewImage3(event),viewImage(event, 3)" type="file">
                                  </div>
                                  <div class="image-cropper" style="display:none;">
                                    <img src="" id="croppedImg3" alt="">
                                    <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                  </div>
                      
                                </div>
                        
                            <div>
    <button class="btn btn-md rounded font-sm hover-up" type="submit" onclick="publishClicked()">Publish</button>

  </div>
                            
                            <!-- .row end// -->
                        </div>
                    </div>
                </div>
            </div>
            </div>
        </form>
        <p><%=(typeof message!=='undefined')?message:""%></p>
        </section> <!-- content-main end// -->
    <%- include('../layouts/adminFooter.ejs') %>	

  


    <script>
      	const myForm = document.getElementById("myForm")


        const name = document.getElementById("name")
        const description = document.getElementById("description")
        const price = document.getElementById("price")
        const stock = document.getElementById("stock")


        const nameError = document.getElementById("nameError")
        const descriptionError = document.getElementById("descriptionError")
        const priceError = document.getElementById("priceError")
        const stockError = document.getElementById("stockError")

      function nameValidation(){
      const nameValue = name.value
			if(nameValue.trim()==0){
				nameError.innerHTML = 'Product title is required'
				nameError.style.color = 'red'
				name.style.border = "solid 2px red";
				return false;
			}
      nameError.innerHTML = ""
			nameError.style.color = "green"
			name.style.border = "solid 2px green";
			return true
        


      }
      

      function descriptionValidation(){
      const descriptionValue = description.value
			if(descriptionValue.trim()==0){
				descriptionError.innerHTML = 'Descripion is required'
				descriptionError.style.color = 'red'
				description.style.border = "solid 2px red";
				return false;
			}
      descriptionError.innerHTML = ""
			descriptionError.style.color = "green"
			description.style.border = "solid 2px green";
			return true
        


      }

      function priceValidation(){
      const priceValue = price.value
			if(priceValue.trim()==0){
				priceError.innerHTML = 'Price is Required'
				priceError.style.color = 'red'
				price.style.border = "solid 2px red";
				return false;
			}
      if(priceValue <= 0 ){
				priceError.innerHTML = 'Price Must be greater than zero'
				priceError.style.color = 'red'
				price.style.border = "solid 2px red";
				return false;
			}
      priceError.innerHTML = ""
			priceError.style.color = "green"
			price.style.border = "solid 2px green";
			return true
        


      }


      function stockValidation(){
      const stockValue = stock.value
			if(stockValue.trim()==0){
				stockError.innerHTML = 'Stock is Required'
				stockError.style.color = 'red'
				stock.style.border = "solid 2px red";
				return false;
			}
      if(stockValue <  0 ){
				stockError.innerHTML = 'Stock Must be greater than or equal to zero'
				stockError.style.color = 'red'
				stock.style.border = "solid 2px red";
				return false;
			}
      stockError.innerHTML = ""
			stockError.style.color = "green"
			stock.style.border = "solid 2px green";
			return true
        


      }










      myForm.addEventListener("submit",(event)=>{
			event.preventDefault();
			if(!nameValidation() || !descriptionValidation() || ! priceValidation()) {
				return false
			}else{
				myForm.submit()
			}

		})




    </script>




   
    <script src="../admin-assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="../admin-assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="../admin-assets/js/vendors/select2.min.js"></script>
    <script src="../admin-assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="../admin-assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="../admin-assets/js/main.js" type="text/javascript"></script>
    <script>
        function viewImage1(event) {
    document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
  }

  function viewImage2(event) {
    document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
  }

  function viewImage3(event) {
    document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
  }
    </script>
    <script>
    function viewImage(event, index) {
        let input = event.target;
        let reader = new FileReader();
    
        reader.onload = function() {
          let dataURL = reader.result;
          let image = document.getElementById('imgView' + index);
          image.src = dataURL;
    
          // Initialize Cropper.js on the image
          let cropper = new Cropper(image, {
            aspectRatio: 1 / 1, // Set the aspect ratio to 1:1 for square images
            viewMode: 1, // Set the view mode to crop box
            guides: true, // Show the crop guides
            background: false, // Do not show the background behind the image
            autoCropArea: 1, // Set the initial crop area to cover the whole image
            zoomable: true // Disable zooming to keep the image size fixed
          });
    
          // Show the image cropper container
          let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
          cropperContainer.style.display = 'block';
    
          // Update the cropped image when the "Save" button is clicked
          let saveButton = document.querySelector('#saveButton' + index);
          saveButton.addEventListener('click', async function() {
            let croppedCanvas = cropper.getCroppedCanvas({
              width: 1500, 
              height: 1500 
            });
            let croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
    
            // Generate a unique name for the cropped image file based on the current timestamp
            let timestamp = new Date().getTime();
            let fileName = `cropped-img-${timestamp}-${index}.png`;
    
            await croppedCanvas.toBlob(blob => {
              let input = document.getElementById('input' + index)
              let imgFile = new File([blob], fileName, blob)
              const fileList = new DataTransfer();
              fileList.items.add(imgFile);
              input.files = fileList.files
            });
            // cropperContainer.style.display = 'none';
          });
    
        };
    
        reader.readAsDataURL(input.files[0]);
      }
    </script>
    <script>
  function publishClicked() {
    // Get the message from the server or any other source, e.g., from the `message` variable
    const message = "<%=(typeof message!=='undefined') ? message : '' %>";
    
    // Show the SweetAlert2 pop-up alert
   Swal.fire({
      icon: 'warning', // Choose an appropriate icon ('info', 'warning', 'error', 'success', etc.)
      title: 'Alert!',
      text: message,
      confirmButtonColor: '#ff0000', // Set the color of the confirm button (in this case, red)
      timer: 8000, // Set the timer to 3000 milliseconds (3 seconds)
      timerProgressBar: true, // Display a progress bar to indicate the time remaining
      showConfirmButton: false, // Hide the confirm button to prevent users from closing the alert manually
    });
  }
</script>
</body>



</html>